@model CompAccessory.Domain.Entites.Accessory

@{
    ViewBag.Title = "Admin: Edit" + @Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Редактирование: @Model.Name</h1>

<!-- Обычно ожидается, что форма осуществляет обратную отправку визуализирующему ее действию -->
<!-- и когда метод Html.BeginForm генерирует HTML-форму, такое предпологается по умолчанию. -->
<!-- Однако это не подходит для нашего метода Create, т.к. мы хотим, чтобы форма выполняла обратную отправку действию Edit, -->
<!-- что позволит сохранить вновь созданные данные о товаре. Для решения этой проблемы воспользуемся перегруженной -->
<!-- версией вспомогательного метода Html.BeginForm, которая дает возможность указать, что целью формы, -->
<!-- сгенерированной в представлении Edit, является метод действия Edit контроллера Admin -->
<!-- Теперь форма будет всегда выполнять отправку действию Edit, независимо от того, какое действие ее визуаизировало -->
<!-- Для успешной загрузки изображения используем перегруженную версию вспомогательного метода Html.BeginForm, -->
<!-- которая позволяет задавать HTML-атрибуты (без атрибута enctype браузер будет передавать только имя файла, -->
<!-- но не его контент) -->
@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @* Шаблонный хелпер EditorForModel() создает поля для редактирования для всех свойств модели *@
    @Html.EditorForModel()

    <div class="editor-label">Изображение</div>
    <div class="editor-field">
        @if (Model.ImageData == null)
        {
            @:Отсутствует
        }
        else
        {
            <!-- добавляем элемент img и указываем в качестве его источника -->
            <!-- результат вызова метода действия GetImage контроллера Accessory -->
            <img width="150" height="150" src="@Url.Action("GetImage", "Accessory", new { Model.AccessoryID})" />
        }
        <div>Загрузить новое изображение: <input type="file" name="Image" /></div>
    </div>
    <input type="submit" value="Сохранить" />
    @Html.ActionLink("Отменить изменения и вернуться к списку товаров", "Index")
}

